// –ü–æ–¥–∫–ª—é—á–∞–µ–º –±–∏–±–ª–∏–æ—Ç–µ–∫—É –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å Telegram API –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é
process.env.NTBA_FIX_319 = 1;
const TelegramBot = require('node-telegram-bot-api');
const mongoose = require('mongoose')
const config = require('./config')
const helper = require('./helper')
const database = require('../database.json')
const user = require('./models/user.model')
const article = require('./models/article.model')
const saveUser = require('./messageService')
const schedule = require("node-schedule")



helper.logStart()


// –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –ë–î
mongoose.connect(config.DB_URL, {
  //useMongoClient: true
  useNewUrlParser: true,
  useUnifiedTopology: true
  //useFindAndModify: false
})
.then(() => console.log('MongoDB connected'))
.catch((err) => console.log(err))


// –ú–æ–¥–µ–ª–∏
const Article = mongoose.model('Article')
const User = mongoose.model('User')

//database.article.forEach(f => new Article(f).save().catch(e => console.log(e)))


// –õ–æ–≥–∏–∫–∞ –±–æ—Ç–∞
// ====================================================

const bot = new TelegramBot(config.TOKEN, {
  polling: true
});


// bot.on('message', msg => {
//   console.log('Workig ...')
// })

bot.on("polling_error", (m) => console.log(m));




// /////////////////////////////////////////////////////////// //
// /////////////////////////////////////////////////////////// //
// –û–¢–ü–†–ê–í–ö–ê –°–û–û–ë–©–ï–ù–ò–Ø –í 1 –î–ï–ù–¨ + 1 –£–†–û–ö
// /////////////////////////////////////////////////////////// //
// /////////////////////////////////////////////////////////// //
bot.onText(/\/start/, msg => {

  const chatId = helper.getChatId(msg)

  console.log(msg)


  User.findOne({telegramId: msg.from.id}, function(err, existingUser) {
    if(existingUser == null) { // –ï—Å–ª–∏ —é–∑–µ—Ä–∞ –Ω–µ—Ç –≤ –ë–¥
      const user = new User({
        telegramId: msg.from.id,
        firstName: msg.from.first_name,
        lastName: msg.from.last_name,
        userName: msg.chat.username
      })
      // –°–æ—Ö—Ä–∞–Ω—è—é –µ–≥–æ –≤ –±–¥
      user.save().then(() => console.log('–Æ–∑–µ—Ä —Å–æ—Ö—Ä–∞–Ω–µ–Ω –≤ –ë–î'))

      // –û—Ç—Å—ã–ª–∞—é –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ –ø–æ id –≤ –ë–î
      //sendArticlesByQuery(chatId, [0])
      Article.find({name: "<strong>–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤—É—é –≤–∞—Å, ${msg.from.first_name}! üéâ</strong>"}).then(articles => {
        const html = articles.map((a, i) => {
          return `${a.name}
          ${a.Description}`
        }).join()

        bot.sendMessage(chatId, html, {
          parse_mode: 'HTML'
        })
      })
      console.log('–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–Ω–æ!')


      // /////////////////////////////////////////////////////////// //
      // –û–¢–ü–†–ê–í–ö–ê –°–û–û–ë–©–ï–ù–ò–ô –£–¢–†–û–ú
      // /////////////////////////////////////////////////////////// //
      var messages = [
        '1',
        '2',
        '3'
      ];
      var url = [
        'https://woodev.ru/downloads/range-shipping-cost',
        'https://woodev.ru/downloads/range-shipping-cost',
        'https://woodev.ru/downloads/range-shipping-cost'
      ];
      let i = 0;

      // –í –∫–∞–∫–æ–µ –≤—Ä–µ–º—è –ø—Ä–∏—Å—ã–ª–∞—Ç—å —Å–æ–æ–±—â–µ–Ω–∏—è –£–¢–†–û–ú
      const time = {second: 11}
      var j = schedule.scheduleJob(time, function() {
        bot.sendMessage(chatId, messages[i], {
          parse_mode: "HTML",
          disable_web_page_preview: false,
          reply_markup: {
            inline_keyboard: [
              [
                {
                  text: "üëâ –ü–µ—Ä–µ–π—Ç–∏ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É —É—Ä–æ–∫–∞ üëà",
                  url: url[i]
                }
              ]
            ]
          }
        });
        i++;
      });
      console.log('–°–æ–æ–±—â–µ–Ω–∏–µ —É—Ç—Ä–æ–º –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ —É—Å–ø–µ—à–Ω–æ!');
      // /////////////////////////////////////////////////////////// //
      // /////////////////////////////////////////////////////////// //




      // /////////////////////////////////////////////////////////// //
      // –û–¢–ü–†–ê–í–ö–ê –°–û–û–ë–©–ï–ù–ò–ô –í –û–ë–ï–î
      // /////////////////////////////////////////////////////////// //
      var messages2 = [
        '1-–æ–±–µ–¥',
        '2-–æ–±–µ–¥',
        '3-–æ–±–µ–¥'
      ];
      let e = 0;

      // –í –∫–∞–∫–æ–µ –≤—Ä–µ–º—è –ø—Ä–∏—Å—ã–ª–∞—Ç—å —Å–æ–æ–±—â–µ–Ω–∏—è –í –û–ë–ï–î
      const time2 = {second: 12}
      var j2 = schedule.scheduleJob(time2, function() {
        bot.sendMessage(chatId, messages2[e], {
          parse_mode: "HTML",
          disable_web_page_preview: false,
          reply_markup: {
            inline_keyboard: [
              [
                {
                  text: "üëâ –ü–µ—Ä–µ–π—Ç–∏ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É —É—Ä–æ–∫–∞ üëà",
                  url: url[e]
                }
              ]
            ]
          }
        });
        e++;
      });
      console.log('–°–æ–æ–±—â–µ–Ω–∏–µ –≤ –æ–±–µ–¥ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ —É—Å–ø–µ—à–Ω–æ!');
      // /////////////////////////////////////////////////////////// //
      // /////////////////////////////////////////////////////////// //




      // /////////////////////////////////////////////////////////// //
      // –û–¢–ü–†–ê–í–ö–ê –°–û–û–ë–©–ï–ù–ò–ô –í–ï–ß–ï–†–û–ú
      // /////////////////////////////////////////////////////////// //
      var messages3 = [
        '1-–≤–µ—á–µ—Ä',
        '2-–≤–µ—á–µ—Ä',
        '3-–≤–µ—á–µ—Ä'
      ];
      let d = 0;

      // –í –∫–∞–∫–æ–µ –≤—Ä–µ–º—è –ø—Ä–∏—Å—ã–ª–∞—Ç—å —Å–æ–æ–±—â–µ–Ω–∏—è –í–ï–ß–ï–†–û–ú
      const time3 = {second: 13}
      var j3 = schedule.scheduleJob(time3, function() {
        bot.sendMessage(chatId, messages3[d], {
          parse_mode: "HTML",
          disable_web_page_preview: false,
          reply_markup: {
            inline_keyboard: [
              [
                {
                  text: "üëâ –ü–µ—Ä–µ–π—Ç–∏ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É —É—Ä–æ–∫–∞ üëà",
                  url: url[d]
                }
              ]
            ]
          }
        });
        d++;
      });
      console.log('–°–æ–æ–±—â–µ–Ω–∏–µ –≤–µ—á–µ—Ä–æ–º –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ —É—Å–ø–µ—à–Ω–æ!');
      // /////////////////////////////////////////////////////////// //
      // /////////////////////////////////////////////////////////// //



    }
    else
    { // –ï—Å–ª–∏ –æ–Ω —É–∂–µ –µ—Å—Ç—å –≤ –ë–¥
      console.log('–Æ–∑–µ—Ä —É–∂–µ –µ—Å—Ç—å –≤ –ë–î')

      // –û–±–Ω–æ–≤–ª—è—é –µ–≥–æ –¥–∞–Ω–Ω—ã–µ
      user.updateOne(
        { firstName: msg.from.first_name },
        { lastName: msg.from.last_name },
        { userName: msg.chat.username }
        // { languageCode: msg.from.language_code }
      ).then(() => console.log('–Æ–∑–µ—Ä –æ–±–Ω–æ–≤–ª–µ–Ω –≤ –ë–î'))

      // –û—Ç–ø—Ä–∞–≤–ª—è—é —Å–æ–æ–±—â–µ–Ω–∏–µ —á—Ç–æ –æ–Ω —É–∂–µ –≤ —Å–∏—Å—Ç–µ–º–µ
      bot.sendMessage(chatId, '–í—ã —É–∂–µ –≤ —Å–∏—Å—Ç–µ–º–µ');
    }
  })

});
// /////////////////////////////////////////////////////////// //
// /////////////////////////////////////////////////////////// //









// –§—É–Ω–∫—Ü–∏—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏–π —Å –±–¥ (Articles)
function sendArticlesByQuery(chatId, query) {
  Article.find(query).then(articles => {
    const html = articles.map((a, i) => {
      return `${a.name}
      ${a.Description}`
    }).join()

    bot.sendMessage(chatId, html, {
      parse_mode: 'HTML'
    })
  })
}



// function getClientInfo(message) {
//     return {
//         firstName: message.from.first_name,
//         lastName: message.from.last_name,
//         telegramId: message.hasOwnProperty('chat') ? message.chat.id : message.from.id
//     };
// }
